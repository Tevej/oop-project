buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        

    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "Tevej"
        gdxVersion = '1.9.8'
        roboVMVersion = '2.3.3'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    findbugs{
        ignoreFailures = false
        effort = "max"
    }
    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
    tasks.withType(Pmd){
        reports{
            xml.enabled=true
            html.enabled=true
        }
    }
    pmd {
        ignoreFailures = false
        pmdTest.enabled=false
    }

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.ashley:ashley:$ashleyVersion"

        testCompile 'junit:junit:4.12'
        compile 'junit:junit:4.12'

        compileOnly 'com.google.code.findbugs:annotations:3.0.1'
        compileOnly 'com.google.code.findbugs:jsr305:3.0.1'
        
        testCompileOnly(
                'junit:junit:4.12'
        )
        testImplementation(
                'org.junit.jupiter:junit-jupiter-api:5.1.0'
        )
        testRuntimeOnly(
                'org.junit.jupiter:junit-jupiter-engine:5.1.0',
                'org.junit.vintage:junit-vintage-engine:5.1.0'
        )
    }

    test {
        useJUnitPlatform()
    }
}

tasks.eclipse.doLast {
    delete ".project"
}